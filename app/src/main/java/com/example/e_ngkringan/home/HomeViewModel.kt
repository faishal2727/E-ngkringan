package com.example.e_ngkringan.homeimport android.content.ContentValues.TAGimport android.util.Logimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport com.example.e_ngkringan.api.ApiConfigimport com.example.e_ngkringan.model.AngkringanDetailimport com.example.e_ngkringan.model.AngkringanResponseimport com.example.e_ngkringan.model.SearchResponseimport retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass HomeViewModel : ViewModel() {    private val _listANgkringan = MutableLiveData<List<AngkringanDetail>>()    val listAngkringan: LiveData<List<AngkringanDetail>> = _listANgkringan    private val _isLoading = MutableLiveData<Boolean>()    val isLoading: LiveData<Boolean> = _isLoading    init {        getAllAngkringan()    }    fun getAllAngkringan() {        _isLoading.postValue(true)        ApiConfig.getApiService().getAllAngkringan()            .enqueue(object : Callback<AngkringanResponse> {                override fun onResponse(                    call: Call<AngkringanResponse>,                    response: Response<AngkringanResponse>                ) {                    _isLoading.postValue(false)                    if (response.isSuccessful) {                        _listANgkringan.postValue(response.body()?.data?.resto)                        Log.d("BAKSO KONTO ", "${response.body()}")                    }                }                override fun onFailure(call: Call<AngkringanResponse>, t: Throwable) {                    _isLoading.postValue(false)                    Log.e(TAG, "onFailyre: ${t.message.toString()}")                }            })    }    fun getSearch(name: String) {        _isLoading.value = true        ApiConfig.getApiService().searchAngkringan(name)            .enqueue(object : Callback<SearchResponse> {                override fun onResponse(                    call: Call<SearchResponse>,                    response: Response<SearchResponse>                ) {                    _isLoading.value = false                    if (response.isSuccessful) {                        _listANgkringan.postValue(response.body()?.data)                    }                }                override fun onFailure(call: Call<SearchResponse>, t: Throwable) {                    _isLoading.value = false                }            })    }}